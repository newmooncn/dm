<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>                
		<!-- use dummy activity prod_act_before_ready 
		1.For the transition, if the from activity is type of subflow, 
		then the 'signal' only can be subflow.*, other signal we defined does not work
		For example, below code does not work, send the 'material_ready' is useless
		
        <record id="mrp.prod_trans_picking_ready" model="workflow.transition">
            <field name="act_from" ref="mrp.prod_act_picking"/>
            <field name="act_to" ref="prod_act_before_ready"/>
            <field name="signal">material_ready</field>
            <field name="condition">True</field>
        </record>		
        
        2.So we need use subflow.* to trigger it
        But for the subflow
        	1). only the subflow's activiey with 'stop=true' can use 'subflow.activity_name' to trigger
        	like below, the 'cancel' is a stop activity
		        <record id="prod_trans_picking_picking_exception" model="workflow.transition">
		            <field name="act_from" ref="prod_act_picking"/>
		            <field name="act_to" ref="prod_act_picking_exception"/>
		            <field name="signal">subflow.cancel</field>
		        </record>
		        
		    And if we do not define the 'signal' for a transition with from activity is a subflow , like below:
		        <record id="prod_trans_picking_ready" model="workflow.transition">
		            <field name="act_from" ref="prod_act_picking"/>
		            <field name="act_to" ref="prod_act_ready"/>
		            <field name="signal"></field>
		            <field name="condition">picking_id and picking_id.state=='done'</field>
		        </record>
		        Once the subflow reached one activity with stop=true, then above transition will be triggered, like the picking is done	    
                	
        	2). For the other activities in the middle of the sub workflow, we need define the 'signal_send' on the subflow activity
		        <record id="prod_trans_picking_picking_exception" model="workflow.transition">
		            <field name="act_from" ref="prod_act_picking"/>
		            <field name="act_to" ref="prod_act_picking_exception"/>
		            <field name="signal">subflow.assigned</field>
		        </record>
		        If we do not define the 'signal_send' for the activity stock.assigned in stock_workflow.xml, then above code will not work.
		
		-->            
        <record id="prod_act_before_ready" model="workflow.activity">
            <field name="wkf_id" ref="mrp.wkf_prod"/>
            <field name="name">before_ready</field>
            <field name="kind">dummy</field>
        </record>
        
        <!-- Add the 'signal_send' to stock.assigned activity, then we can use it in the parent workflow -->
        <record id="stock.act_assigned" model="workflow.activity">
            <field name="wkf_id" ref="stock.wkf_picking"/>
            <field name="name">assigned</field>
            <field name="kind">function</field>
            <field name="action">action_assign_wkf()</field>
            <field name="signal_send">subflow.assigned</field>
        </record>
         
		<!-- use dummy activity prod_act_before_ready to a intermediaer -->   
        <record id="mrp.prod_trans_picking_ready" model="workflow.transition">
            <field name="act_from" ref="mrp.prod_act_picking"/>
            <field name="act_to" ref="prod_act_before_ready"/>
            <!-- <field name="signal"></field>
            <field name="condition">picking_id and (picking_id.state=='done' or picking_id.backorder_id)</field> -->
            <field name="signal">subflow.assigned</field>
            <field name="condition">True</field>
        </record>
        <!-- trigger the ready activity in mrp_pick.stock_picking.do_partial() -->
        <record id="prod_material_before_ready_ready" model="workflow.transition">
            <field name="act_from" ref="prod_act_before_ready"/>
            <field name="act_to" ref="mrp.prod_act_ready"/>
            <field name="signal">material_ready</field>
        </record>
        
    </data>
</openerp>
